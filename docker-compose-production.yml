version: "3.3"
services:
  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    environment:
      TOKEN: ${BOT_TOKEN}
      DB_NAME: ${DATABASE}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASSWORD}
    volumes:
      - "/srv/docker/data/party-finder/bot/files:/files"
    ports:
      - "9080:9080"
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.production
    volumes:
      - './frontend:/app'
      - './frontend/app/node_modules:/app/node_modules'
    ports:
      - "3443:443"
      - "3080:80"
    environment:
      CHOKIDAR_USEPOLLING: "true"
      API_HOSTNAME: ${API_HOSTNAME}
      SITE_HOSTNAME: ${SITE_HOSTNAME}
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.production
    environment:
      SERVER_NAME: ${SERVER_NAME}
      DB_NAME: ${DATABASE}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASSWORD}
      DISCORD_CLIENT_ID: ${CLIENT_ID}
      DISCORD_CLIENT_SECRET: ${CLIENT_SECRET}
      BOT_TOKEN: ${BOT_TOKEN}
      API_HOSTNAME: ${API_HOSTNAME}
      SITE_HOSTNAME: ${SITE_HOSTNAME}
      SECRET_KEY: ${SECRET_KEY}
      WEBHOOK_ID: ${WEBHOOK_ID}
      SUPERUSERS: ${SUPERUSERS}
    volumes:
      - "./backend:/app"
    ports:
      - "8080:80"
      - "8443:443"
  db:
    image: mysql/mysql-server:latest
    restart: always
    environment:
      MYSQL_DATABASE: ${DATABASE}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${ROOT_PASSWORD}
      SUPERUSERS: ${SUPERUSERS}

    volumes:
      - "/srv/docker/data/party-finder/mysql:/var/lib/mysql"
